{"version":3,"sources":["App.module.css","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleFormChange","target","value","setState","handleFormSubmit","event","preventDefault","contactAdd","props","validationForm","id","uuid","resetForm","checkUnique","alert","this","className","styles","form","onSubmit","input","type","placeholder","onChange","button","Component","ContactItem","onRemove","item","span","onClick","ContactList","contacts","length","list","map","contact","Filter","filter","App","handleAddContact","handleCheckUnique","isContactUnique","find","handleRemoveContact","handleFilterChange","getFilteredContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","console","log","currentContacts","setItem","stringify","filteredContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,UAAY,yB,uCCA9BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,8JCIxHC,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAoEKC,E,4MAhEbC,MAAQJ,E,EAERK,iBAAmB,YAAiB,IAAdC,EAAa,EAAbA,OACZL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,iBAAmB,SAAAC,GACjBA,EAAMC,iBADoB,MAED,EAAKP,MAAtBH,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,OACNU,EAAe,EAAKC,MAApBD,WAEY,EAAKE,mBAKzBF,EAAW,CAAEG,GAAIC,cAAQf,OAAMC,WAC/B,EAAKe,c,EAGPH,eAAiB,WAAO,IAAD,EACI,EAAKV,MAAtBH,EADa,EACbA,KAAMC,EADO,EACPA,OACNgB,EAAgB,EAAKL,MAArBK,YAER,OAAKjB,GAASC,EAIPgB,EAAYjB,IAHjBkB,MAAM,+DACC,I,EAKXF,UAAY,WACV,EAAKT,SAASR,I,uDAGN,IAAD,EACkBoB,KAAKhB,MAAtBH,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,uBAAMmB,UAAWC,IAAOC,KAAMC,SAAUJ,KAAKX,iBAA7C,UACE,uBACEY,UAAWC,IAAOG,MAClBC,KAAK,OACLzB,KAAK,OACL0B,YAAY,aACZpB,MAAON,EACP2B,SAAUR,KAAKf,mBAEjB,uBACEgB,UAAWC,IAAOG,MAClBC,KAAK,MACLzB,KAAK,SACL0B,YAAY,qBACZpB,MAAOL,EACP0B,SAAUR,KAAKf,mBAEjB,wBAAQgB,UAAWC,IAAOO,OAAQH,KAAK,SAAvC,gC,GAzDkBI,a,wBCRpBC,EAAc,SAAC,GAAoC,IAAlChB,EAAiC,EAAjCA,GAAId,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQ8B,EAAe,EAAfA,SACvC,OACE,qBAAIX,UAAWC,IAAOW,KAAtB,UACE,uBAAMZ,UAAWC,IAAOY,KAAxB,UAA+BjC,EAA/B,OACA,sBAAMoB,UAAWC,IAAOY,KAAxB,SAA+BhC,IAC/B,wBAAQmB,UAAWC,IAAOO,OAAQM,QAAS,kBAAMH,EAASjB,IAA1D,mBAkBSqB,EAXK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUL,EAAe,EAAfA,SAC/B,OAAwB,IAApBK,EAASC,OAAqB,KAEhC,oBAAIjB,UAAWC,IAAOiB,KAAtB,SACGF,EAASG,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,2BAAkCA,GAAlC,IAA2CT,SAAUA,IAAnCS,EAAQ1B,UCPnB2B,EAZA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQf,EAAe,EAAfA,SACxB,OACE,uBACEF,KAAK,OACLzB,KAAK,SACLM,MAAOoC,EACPf,SAAU,gBAAGtB,EAAH,EAAGA,OAAH,OAAgBsB,EAAStB,EAAOC,QAC1CoB,YAAY,0B,iBCoFHiB,E,4MAnFbxC,MAAQ,CACNiC,SAAU,GAMVM,OAAQ,I,EAuBVE,iBAAmB,SAAAJ,GACjB,EAAKjC,UAAS,gBAAG6B,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,GAAD,mBAAMA,GAAN,CAAgBI,S,EAG7DK,kBAAoB,SAAA7C,GAAS,IAErB8C,IADe,EAAK3C,MAAlBiC,SAC2BW,MAAK,SAAAP,GAAO,OAAIA,EAAQxC,OAASA,KAIpE,OAFA8C,GAAmB5B,MAAM,GAAD,OAAIlB,EAAJ,6BAEhB8C,G,EAGVE,oBAAsB,SAAAlC,GACpB,EAAKP,UAAS,kBAAmB,CAC/B6B,SADY,EAAGA,SACIM,QAAO,SAAAF,GAAO,OAAIA,EAAQ1B,KAAOA,U,EAIxDmC,mBAAqB,SAAAP,GACnB,EAAKnC,SAAS,CAAEmC,Y,EAGlBQ,oBAAsB,WAAO,IAAD,EACG,EAAK/C,MAA1BiC,EADkB,EAClBA,SAAUM,EADQ,EACRA,OAClB,OAAON,EAASM,QAAO,SAAAF,GAAO,OAC5BA,EAAQxC,KAAKmD,cAAcC,SAASV,EAAOS,mB,kEA7C7C,IAAMf,EAAWiB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMrB,GAE9BmB,GACFpC,KAAKZ,SAAS,CAAE6B,SAAUmB,M,yCAIXG,EAAWC,GAC5BC,QAAQC,IAAI,0BAEZ,IAAMC,EAAkB3C,KAAKhB,MAAMiC,SAG/B0B,IAFiBH,EAAUvB,UAG7BiB,aAAaU,QAAQ,WAAYP,KAAKQ,UAAUF,M,+BAkC1C,IACApB,EAAWvB,KAAKhB,MAAhBuC,OACFuB,EAAmB9C,KAAK+B,sBAC9B,OACE,sBAAK9B,UAAWC,IAAO6C,UAAvB,UACE,2CACA,cAAC,EAAD,CACEvD,WAAYQ,KAAKyB,iBACjB3B,YAAaE,KAAK0B,oBAGpB,0CACA,uDACA,cAAC,EAAD,CAAQH,OAAQA,EAAQf,SAAUR,KAAK8B,qBACvC,cAAC,EAAD,CACEb,SAAU6B,EACVlC,SAAUZ,KAAK6B,6B,GA7EPnB,aCFlBsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B1E,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,+B","file":"static/js/main.8eb0d17d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3G6N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__16PeK\",\"item\":\"ContactList_item__rOEvU\",\"span\":\"ContactList_span__3G-1C\",\"button\":\"ContactList_button__1Mmy0\"};","import { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport styles from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleFormChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { contactAdd } = this.props;\n\n    const isFormValid = this.validationForm();\n    if (!isFormValid) {\n      return;\n    }\n\n    contactAdd({ id: uuid(), name, number });\n    this.resetForm();\n  };\n\n  validationForm = () => {\n    const { name, number } = this.state;\n    const { checkUnique } = this.props;\n\n    if (!name || !number) {\n      alert('You have an empty field. Please add name and phone number.');\n      return false;\n    }\n    return checkUnique(name);\n  };\n\n  resetForm = () => {\n    this.setState(INITIAL_STATE);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleFormSubmit}>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleFormChange}\n        />\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={this.handleFormChange}\n        />\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styles from './ContactList.module.css';\n\nconst ContactItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li className={styles.item}>\n      <span className={styles.span}>{name}:</span>\n      <span className={styles.span}>{number}</span>\n      <button className={styles.button} onClick={() => onRemove(id)}>\n        X\n      </button>\n    </li>\n  );\n};\n\nconst ContactList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul className={styles.list}>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","const Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name to search\"\n    />\n  );\n};\n\nexport default Filter;\n","import { Component } from 'react';\n\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      /*       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }, */\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    const currentContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (currentContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(currentContacts));\n    }\n  }\n\n  handleAddContact = contact => {\n    this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n  };\n\n  handleCheckUnique = name => {\n    const { contacts } = this.state;\n    const isContactUnique = !!contacts.find(contact => contact.name === name);\n\n    isContactUnique && alert(`${name} is already in contacts`);\n\n    return !isContactUnique;\n  };\n\n  handleRemoveContact = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = filter => {\n    this.setState({ filter });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          contactAdd={this.handleAddContact}\n          checkUnique={this.handleCheckUnique}\n        />\n\n        <h2>Contacts</h2>\n        <h3>Find contacts by name</h3>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactList\n          contacts={filteredContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3FMEN\",\"input\":\"ContactForm_input__1SJ0P\",\"button\":\"ContactForm_button__39kL-\"};"],"sourceRoot":""}